{"ast":null,"code":"import{useEffect}from\"react\";import{Route,Routes}from\"react-router-dom\";import FeedContainer from\"./components/FeedPage/FeedContainer\";import LoginContainer from\"./components/LoginPage/LoginContainer\";import MessagesContainer from\"./components/MessagesPage/MessagesContainer\";import ProfileContainer from\"./components/ProfilePage/ProfileContainer\";import Sidebar from\"./components/sidebar\";import UsersContainer from\"./components/UsersPage/UsersContainer/UsersContainer\";import{authThunks}from\"./redux/authReducer/authThunks\";import{useAppDispatch,useAppSelector}from\"./redux/hooks\";import TestContainer from\"./TestContainet\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var isAuth=useAppSelector(function(state){return state.auth.isAuth;});var dispatch=useAppDispatch();var routes=[{path:\"/profile/:id\",component:/*#__PURE__*/_jsx(ProfileContainer,{})},{path:\"/feed\",component:/*#__PURE__*/_jsx(FeedContainer,{})},{path:\"/messages/*\",component:/*#__PURE__*/_jsx(MessagesContainer,{})},{path:\"/users\",component:/*#__PURE__*/_jsx(UsersContainer,{})},{path:\"/login\",component:/*#__PURE__*/_jsx(LoginContainer,{})},{path:\"/test\",component:/*#__PURE__*/_jsx(TestContainer,{})}];useEffect(function(){dispatch(authThunks.authMe());},[]);if(isAuth===null){return null;}if(!isAuth){return/*#__PURE__*/_jsx(LoginContainer,{});}return/*#__PURE__*/_jsxs(\"div\",{className:\"lg:flex \",children:[/*#__PURE__*/_jsx(\"div\",{className:\"lg:w-[5%]\",children:/*#__PURE__*/_jsx(Sidebar,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"lg:w-[95%] mb-[40%] lg:mb-0 lg:h-full \",children:/*#__PURE__*/_jsx(Routes,{children:routes.map(function(_ref){var path=_ref.path,component=_ref.component;return/*#__PURE__*/_jsx(Route,{path:path,element:component},path);})})})]});};export default App;","map":{"version":3,"names":["useEffect","Route","Routes","FeedContainer","LoginContainer","MessagesContainer","ProfileContainer","Sidebar","UsersContainer","authThunks","useAppDispatch","useAppSelector","TestContainer","App","isAuth","state","auth","dispatch","routes","path","component","authMe","map"],"sources":["C:/Documents/social-network/src/App.tsx"],"sourcesContent":["import { ReactNode, useEffect } from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport FeedContainer from \"./components/FeedPage/FeedContainer\";\r\nimport LoginContainer from \"./components/LoginPage/LoginContainer\";\r\nimport MessagesContainer from \"./components/MessagesPage/MessagesContainer\";\r\nimport ProfileContainer from \"./components/ProfilePage/ProfileContainer\";\r\n\r\nimport Sidebar from \"./components/sidebar\";\r\nimport UsersContainer from \"./components/UsersPage/UsersContainer/UsersContainer\";\r\nimport { authThunks } from \"./redux/authReducer/authThunks\";\r\nimport { useAppDispatch, useAppSelector } from \"./redux/hooks\";\r\nimport TestContainer from \"./TestContainet\";\r\n\r\nconst App = () => {\r\n  type routesType = {\r\n    path: string;\r\n    component: ReactNode;\r\n  }[];\r\n  let isAuth = useAppSelector((state) => state.auth.isAuth);\r\n  let dispatch = useAppDispatch();\r\n  const routes: routesType = [\r\n    { path: \"/profile/:id\", component: <ProfileContainer /> },\r\n    { path: \"/feed\", component: <FeedContainer /> },\r\n    { path: \"/messages/*\", component: <MessagesContainer /> },\r\n    { path: \"/users\", component: <UsersContainer /> },\r\n    { path: \"/login\", component: <LoginContainer /> },\r\n    { path: \"/test\", component: <TestContainer /> },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    dispatch(authThunks.authMe());\r\n  }, []);\r\n\r\n  if (isAuth === null) {\r\n    return null;\r\n  }\r\n\r\n  if (!isAuth) {\r\n    return <LoginContainer />;\r\n  }\r\n\r\n  return (\r\n    <div className={`lg:flex `}>\r\n      <div className={`lg:w-[5%]`}>\r\n        <Sidebar />\r\n      </div>\r\n      <div className={`lg:w-[95%] mb-[40%] lg:mb-0 lg:h-full `}>\r\n        <Routes>\r\n          {routes.map(({ path, component }) => (\r\n            <Route path={path} element={component} key={path} />\r\n          ))}\r\n        </Routes>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n"],"mappings":"AAAA,OAAoBA,SAApB,KAAqC,OAArC,CACA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,kBAA9B,CACA,MAAOC,cAAP,KAA0B,qCAA1B,CACA,MAAOC,eAAP,KAA2B,uCAA3B,CACA,MAAOC,kBAAP,KAA8B,6CAA9B,CACA,MAAOC,iBAAP,KAA6B,2CAA7B,CAEA,MAAOC,QAAP,KAAoB,sBAApB,CACA,MAAOC,eAAP,KAA2B,sDAA3B,CACA,OAASC,UAAT,KAA2B,gCAA3B,CACA,OAASC,cAAT,CAAyBC,cAAzB,KAA+C,eAA/C,CACA,MAAOC,cAAP,KAA0B,iBAA1B,C,wFAEA,GAAMC,IAAG,CAAG,QAANA,IAAM,EAAM,CAKhB,GAAIC,OAAM,CAAGH,cAAc,CAAC,SAACI,KAAD,QAAWA,MAAK,CAACC,IAAN,CAAWF,MAAtB,EAAD,CAA3B,CACA,GAAIG,SAAQ,CAAGP,cAAc,EAA7B,CACA,GAAMQ,OAAkB,CAAG,CACzB,CAAEC,IAAI,CAAE,cAAR,CAAwBC,SAAS,cAAE,KAAC,gBAAD,IAAnC,CADyB,CAEzB,CAAED,IAAI,CAAE,OAAR,CAAiBC,SAAS,cAAE,KAAC,aAAD,IAA5B,CAFyB,CAGzB,CAAED,IAAI,CAAE,aAAR,CAAuBC,SAAS,cAAE,KAAC,iBAAD,IAAlC,CAHyB,CAIzB,CAAED,IAAI,CAAE,QAAR,CAAkBC,SAAS,cAAE,KAAC,cAAD,IAA7B,CAJyB,CAKzB,CAAED,IAAI,CAAE,QAAR,CAAkBC,SAAS,cAAE,KAAC,cAAD,IAA7B,CALyB,CAMzB,CAAED,IAAI,CAAE,OAAR,CAAiBC,SAAS,cAAE,KAAC,aAAD,IAA5B,CANyB,CAA3B,CASApB,SAAS,CAAC,UAAM,CACdiB,QAAQ,CAACR,UAAU,CAACY,MAAX,EAAD,CAAR,CACD,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAIP,MAAM,GAAK,IAAf,CAAqB,CACnB,MAAO,KAAP,CACD,CAED,GAAI,CAACA,MAAL,CAAa,CACX,mBAAO,KAAC,cAAD,IAAP,CACD,CAED,mBACE,aAAK,SAAS,WAAd,wBACE,YAAK,SAAS,YAAd,uBACE,KAAC,OAAD,IADF,EADF,cAIE,YAAK,SAAS,yCAAd,uBACE,KAAC,MAAD,WACGI,MAAM,CAACI,GAAP,CAAW,kBAAGH,KAAH,MAAGA,IAAH,CAASC,SAAT,MAASA,SAAT,oBACV,KAAC,KAAD,EAAO,IAAI,CAAED,IAAb,CAAmB,OAAO,CAAEC,SAA5B,EAA4CD,IAA5C,CADU,EAAX,CADH,EADF,EAJF,GADF,CAeD,CA3CD,CA4CA,cAAeN,IAAf"},"metadata":{},"sourceType":"module"}